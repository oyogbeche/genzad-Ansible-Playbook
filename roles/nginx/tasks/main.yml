- name: Ensure Nginx sites directories exist
  file:
    path: "/etc/nginx/{{ item }}"
    state: directory
    mode: '0755'
  loop:
    - sites-available
    - sites-enabled

- name: Configure NGINX site blocks
  template:
    src: "{{ item.template }}"
    dest: "/etc/nginx/sites-available/{{ item.name }}.conf"
    mode: '0644'
  loop:
    - { name: "frontend", template: "frontend.conf.j2", sites: "{{ frontend_sites }}" }
    - { name: "backend", template: "backend.conf.j2", sites: "{{ backend_sites }}" }
  vars:
    sites: "{{ item.sites }}"
  notify: Reload NGINX


- name: Enable both site configs
  file:
    src: "/etc/nginx/sites-available/{{ item }}.conf"
    dest: "/etc/nginx/sites-enabled/{{ item }}.conf"
    state: link
    force: true
  loop:
    - frontend
    - backend


- name: Collect all SSL domains from frontend and backend
  set_fact:
    ssl_domains: >-
      {{
        (frontend_sites + backend_sites)
        | map(attribute='domain_name')
        | list
        + (frontend_sites + backend_sites)
        | map(attribute='aliases')
        | flatten
      }}
  when: frontend_sites is defined and backend_sites is defined

- name: Obtain SSL certificates using Certbot
  shell: >
    certbot certonly --nginx --agree-tos --email {{ email }}
    {% for domain in ssl_domains %}
    --domains {{ domain }}
    {% endfor %}
  notify: Reload NGINX
  when: ssl_domains is defined and ssl_domains | length > 0